// This file is generated by @nest-ease/generator. DO NOT MANUALLY MODIFY!
import { PrismaService } from '../../prisma/prisma.service';
import { StandaloneModel } from './model/standalone.model';
import { StandaloneModelCreateArgs } from './args/standalone-model-create.args';
import { StandaloneModelUpdateArgs } from './args/standalone-model-update.args';
import { StandaloneModelDeleteArgs } from './args/standalone-model-delete.args';
import { StandaloneModelFindUniqueArgs } from './args/standalone-model-find-unique.args';
import { StandaloneModelCountArgs } from './args/standalone-model-count.args';
import { StandaloneModelFindManyArgs } from './args/standalone-model-find-many.args';
import { AffectedRowsOutput } from '../../prisma/base/output/affected-rows.output';
import { StandaloneModelCreateManyArgs } from './args/standalone-model-create-many.args';
import { StandaloneModelUpdateManyArgs } from './args/standalone-model-update-many.args';
import { StandaloneModelDeleteManyArgs } from './args/standalone-model-delete-many.args';

export class StandaloneModelBaseService {
  constructor(protected readonly prisma: PrismaService) {}

  async create(args: StandaloneModelCreateArgs): Promise<StandaloneModel> {
    return this.prisma.client.standaloneModel.create(args);
  }

  async update(
    args: StandaloneModelUpdateArgs,
  ): Promise<StandaloneModel | null> {
    return this.prisma.client.standaloneModel.update(args);
  }

  async delete(
    args: StandaloneModelDeleteArgs,
  ): Promise<StandaloneModel | null> {
    return this.prisma.client.standaloneModel.delete(args);
  }

  async findUnique(
    args: StandaloneModelFindUniqueArgs,
  ): Promise<StandaloneModel | null> {
    return this.prisma.client.standaloneModel.findUnique(args);
  }

  async count(args: StandaloneModelCountArgs): Promise<number> {
    return this.prisma.client.standaloneModel.count(args);
  }

  async findMany(
    args: StandaloneModelFindManyArgs,
  ): Promise<Array<StandaloneModel>> {
    return this.prisma.client.standaloneModel.findMany(args);
  }

  async createMany(
    args: StandaloneModelCreateManyArgs,
  ): Promise<AffectedRowsOutput> {
    return this.prisma.client.standaloneModel.createMany(args);
  }

  async updateMany(
    args: StandaloneModelUpdateManyArgs,
  ): Promise<AffectedRowsOutput> {
    return this.prisma.client.standaloneModel.updateMany(args);
  }

  async deleteMany(
    args: StandaloneModelDeleteManyArgs,
  ): Promise<AffectedRowsOutput> {
    return this.prisma.client.standaloneModel.deleteMany(args);
  }
}
