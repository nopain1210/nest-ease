// This file is generated by @nest-ease/generator. DO NOT MODIFY!
/* eslint-disable @typescript-eslint/no-explicit-any */
import { InputType, Field, HideField } from '@nestjs/graphql';
import { UserCreateWithoutParentInput } from './user-create-without-parent.input';
import { Type } from 'class-transformer';
import { UserCreateOrConnectWithoutParentInput } from './user-create-or-connect-without-parent.input';
import { UserUpsertWithWhereUniqueWithoutParentInput } from './user-upsert-with-where-unique-without-parent.input';
import { UserCreateManyParentInputEnvelope } from './user-create-many-parent-input-envelope.input';
import { UserWhereUniqueInput } from './user-where-unique.input';
import { Prisma } from '../../../prisma-client';
import { UserUpdateWithWhereUniqueWithoutParentInput } from './user-update-with-where-unique-without-parent.input';
import { UserUpdateManyWithWhereWithoutParentInput } from './user-update-many-with-where-without-parent.input';
import { UserScalarWhereInput } from './user-scalar-where.input';

@InputType()
export class UserUpdateManyWithoutParentNestedInput {
  @Type(() => UserCreateWithoutParentInput)
  @Field(() => [UserCreateWithoutParentInput], {
    nullable: true,
    description: undefined,
  })
  create?: Array<UserCreateWithoutParentInput>;
  @Type(() => UserCreateOrConnectWithoutParentInput)
  @HideField()
  connectOrCreate?: Array<UserCreateOrConnectWithoutParentInput>;
  @Type(() => UserUpsertWithWhereUniqueWithoutParentInput)
  @HideField()
  upsert?: Array<UserUpsertWithWhereUniqueWithoutParentInput>;
  @Type(() => UserCreateManyParentInputEnvelope)
  @Field(() => UserCreateManyParentInputEnvelope, {
    nullable: true,
    description: undefined,
  })
  createMany?: UserCreateManyParentInputEnvelope;
  @Type(() => UserWhereUniqueInput)
  @HideField()
  set?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'email'>;
  @Type(() => UserWhereUniqueInput)
  @Field(() => [UserWhereUniqueInput], {
    nullable: true,
    description: undefined,
  })
  disconnect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'email'>;
  @Type(() => UserWhereUniqueInput)
  @Field(() => [UserWhereUniqueInput], {
    nullable: true,
    description: undefined,
  })
  delete?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'email'>;
  @Type(() => UserWhereUniqueInput)
  @Field(() => [UserWhereUniqueInput], {
    nullable: true,
    description: undefined,
  })
  connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'email'>;
  @Type(() => UserUpdateWithWhereUniqueWithoutParentInput)
  @Field(() => [UserUpdateWithWhereUniqueWithoutParentInput], {
    nullable: true,
    description: undefined,
  })
  update?: Array<UserUpdateWithWhereUniqueWithoutParentInput>;
  @Type(() => UserUpdateManyWithWhereWithoutParentInput)
  @HideField()
  updateMany?: Array<UserUpdateManyWithWhereWithoutParentInput>;
  @Type(() => UserScalarWhereInput)
  @HideField()
  deleteMany?: Array<UserScalarWhereInput>;
}
